[tox]
envlist = lint,pypi-description,docs,py37
isolated_build = True

[testenv]
extras = tests
commands = python -m pytest {posargs}

[testenv:conf]
whitelist_externals =
    */jsonnet
skip_install = true
# jsonnet command line tool only allows one filename at a time
commands =
    jsonnet -m accession_steps accession_steps/jsonnet/atac_chip.jsonnet
    jsonnet -m accession_steps accession_steps/jsonnet/long_read_rna.jsonnet
    jsonnet -m accession_steps accession_steps/jsonnet/wgbs.jsonnet
    jsonnet -m accession_steps accession_steps/jsonnet/bulk_rna.jsonnet

[testenv:lint]
basepython = python3.8
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files

[testenv:lint-ignore-exit-code]
basepython = python3.7
skip_install = true
deps = pre-commit
commands = - pre-commit run --all-files

[testenv:coverage-report]
basepython = python3.7
extras = tests
commands = pytest --cov-report term-missing --cov=accession

[testenv:docs]
basepython = python3.7
extras = docs
commands = sphinx-build -W -b html -d {envtmpdir}/doctrees docs docs/_build/html

[testenv:pypi-description]
basepython = python3.7
skip_install = true
deps =
    twine
    pip >= 18.0.0
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*

[flake8]
max_line_length = 88
ignore = E203,E231,E501,W503
exclude = accession/__init__.py

[pytest]
markers =
    docker: marks tests using dockerized local encoded server
    filesystem: marks tests relying on the filesystem

[coverage:report]
# Adapted from https://coverage.readthedocs.io/en/latest/config.html#syntax
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
